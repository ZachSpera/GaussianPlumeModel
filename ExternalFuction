function [Concentration] = GaussianPlumeModel[U0,Z0,Z1,Z,ISR,X,V,R2,P,T,Y]
%Initialize lowercase p as standard deviation of plume and is .25 
p = .25
%Calculation for speed at stack
U1 = U0*(Z1/Z0)^p
%Calculation for speed at ground 
Ug = U0*(Z1/10)^p
%Initializing class chart
ClassTable = ['A', 'B', 'B' ; 'B', 'B', 'C' ; 'B', 'C', 'C', ; 'C', 'D', 'D', ; 'C', 'D', 'D']
row = 1
%Finding Row 
if Ug < 2
    row = 1
elseif Ug < 3 & Ug > 2
    row = 2 
elseif Ug < 4 & Ug > 3
    row = 3
elseif Ug < 5 & Ug > 4
    row = 4
else  
    row = 5
end

%Sets Stability class to the rows and ISR (1-3)
StabilityClass = ClassTable(row,ISR)

% Determains which part of table to use 
if x < 1 
    dispersionTable = [213 440.8 1.941 9.27; 
                       156 100.6 1.149 3.3;
                       104 61 0.911 0;
                       68 33.2 0.725 -1.7;
                       50.5 22.8 0.678 1.3;
                       34 14.35 0.74 -0.35]
else 
    dispersionTable = [213 459.7 2.094 -9.6;
                       156 108.2 1.098 2;
                       104 61 0.911 0;
                       68 44.5 0.516 -13;
                       50 55.4 0.305 -34;
                       34 62.6 0.18 -48.6]
end 
DispersionRow = 1
if StabilityClass = 'A'
    DispersionRow = 1 
elseif StabilityClass = 'B'
    DispersionRow = 2
elseif StabilityClass = 'C'
    DispersionRow = 3
elseif StabilityClass = 'D'
    DispersionRow = 4
end

%Finding coefficents for a-f
a = dispersionTable(DispersionRow,1)
c = dispersionTable(DispersionRow,2)
d = dispersionTable(DispersionRow,3)
f = dispersionTable(DispersionRow,4)

sigmaz = c * x^d + f 
sigmay = a*x^0.894
